FullyCNN(
  (0): Conv2d(2, 128, kernel_size=(5, 5), stride=(1, 1))
  (1): ReLU()
  (2): Conv2d(128, 64, kernel_size=(5, 5), stride=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1))
  (5): ReLU()
  (6): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))
  (7): ReLU()
  (8): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))
  (9): ReLU()
  (10): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))
  (11): ReLU()
  (12): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))
  (13): ReLU()
  (14): Conv2d(32, 4, kernel_size=(3, 3), stride=(1, 1))
  (final_transformation): SoftPlusTransform(Parameter containing:
  tensor(0.1000, requires_grad=True))
)